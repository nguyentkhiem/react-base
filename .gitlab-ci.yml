stages:
  - install
  - sonarqube
  - deploy

cache:
  paths:
    - node_modules/

lint:
  stage: install
  image: node:18-alpine
  only:
    - main
    - merge_requests
  script:
    - yarn install
  
sonarqube-check:
  stage: sonarqube
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main # or the name of your main branchs

ssh:
  stage: deploy
  only:
    - main
    - merge_requests
  before_script:
    - 'which ssh-agent || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts
  script:
    - >
      ssh -t -t $SSH_SERVER_USER@$SSH_SERVER_IP
      "cd ${PATH_TO_PROJECT};
      git pull origin main;
      docker-compose up -d;
      "